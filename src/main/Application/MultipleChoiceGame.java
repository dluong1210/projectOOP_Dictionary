package Application;

import java.util.Scanner;

/**
 * Learning English with multiple-choice game choosing A B C D.
 */
public abstract class MultipleChoiceGame implements GameCommandline {
    protected DictionaryManagement dictionaryManagement = new DictionaryManagement();
    /**
     * Four options A B C D.
     */
    protected static final String[] option = {"A", "B", "C", "D"};
    /**
     * Four words using to generate question and choices.
     */
    protected Word[] words = new Word[4];
    /**
     * Player choice from input.
     */
    protected String playerChoice;
    /**
     * The nth option is the correct choice.
     */
    protected int correctChoice;
    /**
     * Player points.
     */
    protected int points;

    /**
     * The full question generated by the correctChoice word.
     * @return the full question generated by the correctChoice word
     */
    public abstract String giveQuestion() ;

    /**
     * The ith choice generated by the ith word.
     * @param i the ith option
     * @return the full choice sentence
     */
    public abstract String giveChoice(int i);

    /**
     * Compare the result.
     * @return true if the player choice equal the correct option then add point
     */
    public boolean checkAnswer() {
        if (playerChoice.equals(option[correctChoice])) {
            setPoints(getPoints() + 1);
            return true;
        }
        return false;
    }

    /**
     * A random word with chosen length.
     * @return a random word with length from 4 to 10 characters
     */
    protected Word getRandomWord() {
        return dictionaryManagement.listWord.getRandomWord(4,10);                     // tra ve Word random lay trong database
    }

    /**
     * Update four words with condition.
     */
    public abstract void getValidWordChoices();

//////// Game Commandline method.

    public void printQuestionAndChoices() {
        System.out.println(giveQuestion());
        for (int i = 0; i < 4; i += 1) {
            System.out.println(giveChoice(i));
        }
    }

    public void endGame() {
        System.out.println("Congratulation! Your points is: " + points);
    }

//////// Getter / setter

    public DictionaryManagement getDictionaryManagement() {
        return dictionaryManagement;
    }

    public void setDictionaryManagement(DictionaryManagement dictionaryManagement) {
        this.dictionaryManagement = dictionaryManagement;
    }

    public String getPlayerChoice() {
        return playerChoice;
    }

    public void setPlayerChoice(String playerChoice) {
        this.playerChoice = playerChoice;
    }

    public int getCorrectChoice() {
        return correctChoice;
    }

    public void setCorrectChoice(int correctChoice) {
        this.correctChoice = correctChoice;
    }

    public int getPoints() {
        return points;
    }

    public void setPoints(int points) {
        this.points = points;
    }

//// Old method.


/*
    public void getValidPlayerInput() {
        Scanner scan = new Scanner(System.in);
        while (true) {
            System.out.println("Your answer is: ");
            playerChoice = scan.nextLine();
            if (!(playerChoice.equals("A") || playerChoice.equals("B") || playerChoice.equals("C") || playerChoice.equals("D"))) {
                System.out.println("Please choose A, B, C or D");
                continue;
            }
            break;
        }
    }
*/


}
